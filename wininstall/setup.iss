; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Chconsole"
#define ConnectName "Chconsole Remote"
#define MyAppVersion "1.x"
#define MyAppPublisher "Manfred Minimair"
#define MyAppURL "https://github.com/mincode/chconsole"
#define MyAppExeName "chconsole.exe"
#define ConnectExeName "guilaunch-chconsole.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{133C825A-4F0C-41E4-9D4D-706F27D91006}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={userpf}\{#MyAppName}
DisableProgramGroupPage=yes
LicenseFile=copyright.txt
OutputBaseFilename=chsetup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "Miniconda3-latest-Windows-x86_64.exe"; Flags: ignoreversion dontcopy
Source: "copyright.txt"; DestDir: "{app}"; Flags: ignoreversion; BeforeInstall: AllInstall 
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{code:LocalApp}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{code:LocalApp}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{commonprograms}\{#ConnectName}"; Filename: "{code:LocalApp}\{#ConnectExeName}"
Name: "{commondesktop}\{#ConnectName}"; Filename: "{code:LocalApp}\{#ConnectExeName}"; Tasks: desktopicon

[Run]
; Filename: "{code:LocalApp}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent

[UninstallDelete]
Type: filesandordirs; Name: {code:condaHome}

[Code]
function Conda: String;
begin
  Result := 'Miniconda3-latest-Windows-x86_64.exe';
end;

function InitializeSetup: Boolean;
begin
  ExtractTemporaryFile(Conda);
  Result := True;
end;

function CondaInstaller: String;
begin
  Result := ExpandConstant('{tmp}') + '\' + Conda;
end;

function CondaHome(Param: String): String;
begin
  Result := ExpandConstant('{app}') + '\chconda3';
end;

function LocalApp(Param: String): String;
begin
  Result := CondaHome('') + '\Scripts';
end;

function LocalConda: String;
begin
  Result := LocalApp('') + '\' + 'conda.exe'; 
end;

function LocalPip: String;
begin
  Result := LocalApp('') + '\' + 'pip.exe'; 
end;

function ShellInstall(Message: String; Command: String; Params: String; ResultCode: Integer): Boolean;
var
  ToInstall: String;
begin
  ToInstall := Command + ' ' + Params;
  Result := Exec(ExpandConstant('{cmd}'), 
    ' /C "echo ' + Message + ' && echo ' + ToInstall + ' && ' + ToInstall + '"', 
    '', 
    SW_SHOW, 
    ewWaitUntilTerminated, 
    ResultCode);
end;

procedure AllInstall;
var
  ResultCode: Integer;
begin
  if ShellInstall('Installing local Python environment. Please, wait ...', CondaInstaller,
    '/InstallationType=1 /AddToPath=0 /RegisterPython=0 /NoRegistry=1 /S /D=' + CondaHome(''), ResultCode) then begin
    if ShellInstall('Updating Python.', LocalConda, 'update --yes --all', ResultCode) then begin
      if ShellInstall('Installing pyqt. Please, wait ...', LocalConda, 'install pyqt --yes', ResultCode) then begin  
        if ShellInstall('Installing chconsole.', LocalPip, 'install chconsole', ResultCode) then begin
          // install done
        end
        else begin
          MsgBox('Installing chconsole faild with code: ' + IntToStr(ResultCode), mbInformation, MB_OK);
        end
      end
      else begin
        MsgBox('Installing pyqt faild with code: ' + IntToStr(ResultCode), mbInformation, MB_OK);
      end
    end
    else begin
      MsgBox('Updating Python faild with code: ' + IntToStr(ResultCode), mbInformation, MB_OK);
    end
  end
  else begin
    MsgBox('Installing Python faild with code: ' + IntToStr(ResultCode), mbInformation, MB_OK);
  end;
end;
